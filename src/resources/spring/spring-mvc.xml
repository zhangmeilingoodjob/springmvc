<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-4.0.xsd 
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
	<!-- 
		<context:component-scan/> 扫描指定的包中的类上的注解，常用的注解有：
		@Controller 声明Action组件
		@Service    声明Service组件    @Service("myMovieLister") 
		@Repository 声明Dao组件
		@Component   泛指组件, 当不好归类时. 
		@RequestMapping("/menu")  请求映射
		@Resource  用于注入，( j2ee提供的 ) 默认按名称装配，@Resource(name="beanName") 
		@Autowired 用于注入，(srping提供的) 默认按类型装配 
		@Transactional( rollbackFor={Exception.class}) 事务管理
		@ResponseBody
		@Scope("prototype")   设定bean的作用域
	 -->
	<context:component-scan base-package="com.zml.ssh.controller" />
	
	<!-- 默认的注解映射的支持 -->  
	<!-- 
		<mvc:annotation-driven /> 是一种简写形式，完全可以手动配置替代这种简写形式，简写形式可以让初学都快速应用默认配置方案。
		<mvc:annotation-driven /> 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的。
		并提供了：数据绑定支持，@NumberFormatannotation支持，@DateTimeFormat支持，@Valid支持，读写XML的支持（JAXB），读写JSON的支持（Jackson）。
		后面，我们处理响应ajax请求时，就使用到了对json的支持。
	 -->
	<mvc:annotation-driven />
	
	<!-- 对静态资源文件的访问  方案一 （二选一） -->
	<!-- <mvc:default-servlet-handler/> 使用默认的Servlet来响应静态文件。 -->
	<!-- 对静态资源文件的访问  方案二 （二选一） -->
	  <!-- 匹配URL  /images/**  的URL被当做静态资源，由Spring读出到内存中再响应http。-->
	 <mvc:resources mapping="/resources/**" location="/resources/" cache-period="31556926"/>
	


	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<!-- <bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean> -->

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- springMvc文件上传下载配置 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>209715200</value><!-- 上传文件大小限制为200M，31*1024*1024 -->
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>

</beans>